"use client"

import { useState } from 'react'
import { ChevronDown, ChevronUp } from 'lucide-react'

const faqs = [
  {
    question: "What specific business problems can Generative AI solve for us?",
    answer: "We can help your business tackle challenges such as automating routine tasks, enhancing customer service through personalized interactions, generating innovative content, and deriving actionable insights from your data, ensuring solutions are precisely aligned with your strategic objectives."
  },
  {
    question: "What are the data requirements for Generative AI to be effective in our context?",
    answer: "The data requirements depend on your specific use case. Generally, Generative AI models need large, diverse, and high-quality datasets relevant to your domain. We can work with various data types including text, images, or structured data, and can guide you through the data preparation process."
  },
  {
    question: "Can Generative AI integrate seamlessly with our current IT infrastructure?",
    answer: "Yes, we design our Generative AI solutions to integrate smoothly with existing IT infrastructures. We use APIs, microservices, and other integration methods to ensure our solutions work harmoniously with your current systems, minimizing disruption to your operations."
  },
  {
    question: "What are the security measures in place to protect the data used and generated by Generative AI?",
    answer: "We implement robust security measures including data encryption, access controls, and regular security audits. We also ensure compliance with data protection regulations like GDPR. For sensitive data, we can develop on-premises solutions or use secure cloud environments based on your requirements."
  },
  {
    question: "How can we measure the ROI of implementing Generative AI solutions?",
    answer: "ROI can be measured through various metrics depending on the specific application. These might include time saved on tasks, increase in productivity, improvement in customer satisfaction scores, reduction in operational costs, or increase in revenue from new AI-driven products or services. We work with you to define and track relevant KPIs."
  },
  {
    question: "What type of training and support do you provide during and after implementation?",
    answer: "We provide comprehensive training for your team on how to use and maintain the Generative AI system. This includes hands-on workshops, documentation, and ongoing technical support. Post-implementation, we offer maintenance services, performance monitoring, and system upgrades to ensure your solution remains effective and up-to-date."
  },
  {
    question: "Are there examples of similar businesses that have successfully implemented Generative AI?",
    answer: "Yes, we have numerous success stories across various industries. For instance, we've helped e-commerce companies implement AI-driven product recommendation systems, assisted financial institutions in developing AI-powered fraud detection models, and worked with healthcare providers to create AI systems for medical image analysis. We'd be happy to provide case studies relevant to your industry."
  }
]

export function FAQ() {
  const [openIndex, setOpenIndex] = useState<number | null>(null)

  return (
    <section className="bg-[#A8B2E7] py-20"> {/* Lavender background */}
      <div className="container mx-auto px-4">
        <h2 className="text-3xl md:text-4xl font-bold text-black text-center mb-12">
          Generative AI Development Services
        </h2>
        <div className="max-w-3xl mx-auto">
          {faqs.map((faq, index) => (
            <div key={index} className="mb-4">
              <button
                className="flex justify-between items-center w-full text-left p-4 bg-[#F3F1EB] rounded-lg border border-black"
                onClick={() => setOpenIndex(openIndex === index ? null : index)}
              >
                <span className="text-black font-semibold">{faq.question}</span>
                {openIndex === index ? (
                  <ChevronUp className="text-black" />
                ) : (
                  <ChevronDown className="text-black" />
                )}
              </button>
              {openIndex === index && (
                <div className="p-4 bg-[#F3F1EB] mt-1 rounded-lg border border-black">
                  <p className="text-black">{faq.answer}</p>
                </div>
              )}
            </div>
          ))}
        </div>
      </div>
    </section>
  )
}

export default FAQ;
